(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{715:function(e,t,o){"use strict";o.r(t);var s=o(1),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"modules"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#modules"}},[e._v("#")]),e._v(" Modules")]),e._v(" "),o("HighlightBox",{attrs:{type:"prerequisite"}},[o("p",[e._v("Review the following sections to better understand modules in the Cosmos SDK:")]),e._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/academy/2-cosmos-concepts/3-transactions.html"}},[e._v("Transactions")])],1),e._v(" "),o("li",[o("RouterLink",{attrs:{to:"/academy/2-cosmos-concepts/4-messages.html"}},[e._v("Messages")])],1),e._v(" "),o("li",[o("RouterLink",{attrs:{to:"/academy/2-cosmos-concepts/9-queries.html"}},[e._v("Queries")])],1)])]),e._v(" "),o("HighlightBox",{attrs:{type:"learning"}},[o("p",[e._v("Modules are functional components that address application-level concerns such as token management or governance. The Cosmos SDK includes several ready-made modules so that application developers can focus on the truly unique aspects of their application.\n"),o("br"),o("br"),e._v("\nA code example that illustrates module creation and an introduction to your checkers blockchain can be found at the end of this section.")])]),e._v(" "),o("p",[e._v("Each Cosmos chain is a purpose-built blockchain. Cosmos SDK modules define the unique properties of each chain. Modules can be considered state machines within the larger state machine. They contain the storage layout, or state, and the state transition functions, which are the message methods.")]),e._v(" "),o("p",[e._v("Modules define most of the logic of Cosmos SDK applications.")]),e._v(" "),o("p",[o("tm-image",{attrs:{src:"/academy/2-cosmos-concepts/images/message_processing.png"}})],1),e._v(" "),o("p",[e._v("When a transaction is relayed from the underlying CometBFT consensus engine, "),o("code",[e._v("BaseApp")]),e._v(" decomposes the "),o("code",[e._v("Messages")]),e._v(" contained within the transaction and routes messages to the appropriate module for processing. Interpretation and execution occur when the appropriate module message handler receives the message.")]),e._v(" "),o("p",[e._v("Developers compose together modules using the Cosmos SDK to build custom application-specific blockchains.")]),e._v(" "),o("h2",{attrs:{id:"module-scope"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#module-scope"}},[e._v("#")]),e._v(" Module scope")]),e._v(" "),o("p",[e._v("Modules include "),o("strong",[e._v("core")]),e._v(" functionality that every blockchain node needs:")]),e._v(" "),o("ul",[o("li",[e._v("A boilerplate implementation of the Application Blockchain Interface (ABCI) that communicates with CometBFT.")]),e._v(" "),o("li",[e._v("A general-purpose data store that persists the module state called "),o("code",[e._v("multistore")]),e._v(".")]),e._v(" "),o("li",[e._v("A server and interfaces to facilitate interactions with the node.")])]),e._v(" "),o("p",[e._v("Modules implement the majority of the application logic while the "),o("strong",[e._v("core")]),e._v(" attends to wiring and infrastructure concerns, and enables modules to be composed into higher-order modules.")]),e._v(" "),o("p",[e._v("A module defines a subset of the overall state, using:")]),e._v(" "),o("ul",[o("li",[e._v("One or more keys or value stores, known as "),o("code",[e._v("KVStore")]),e._v(".")]),e._v(" "),o("li",[e._v("A subset of message types that are needed by the application and do not exist yet.")])]),e._v(" "),o("p",[e._v("Modules also define interactions with other modules that already exist.")]),e._v(" "),o("HighlightBox",{attrs:{type:"info"}},[o("p",[e._v("Most of the work for developers involved in building a Cosmos SDK application consists of building custom modules required by their application that do not exist yet, and integrating them with modules that already exist into one coherent application. Existing modules can come either from the Cosmos SDK itself or from "),o("strong",[e._v("third-party developers")]),e._v(". You can download these from an online module repository.")])]),e._v(" "),o("h2",{attrs:{id:"module-components"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#module-components"}},[e._v("#")]),e._v(" Module components")]),e._v(" "),o("p",[e._v("It is best practice to define a module in the "),o("code",[e._v("x/moduleName")]),e._v(" folder. For example, the module called "),o("code",[e._v("Checkers")]),e._v(" would go in "),o("code",[e._v("x/checkers")]),e._v(". If you look at the Cosmos SDK's base code, it also "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/tree/main/x",target:"_blank",rel:"noopener noreferrer"}},[e._v("defines its modules"),o("OutboundLink")],1),e._v(" in an "),o("code",[e._v("x/")]),e._v(" folder.")]),e._v(" "),o("p",[e._v("Modules implement several elements:")]),e._v(" "),o("Accordion",{attrs:{items:[{title:"Interfaces",description:"Interfaces facilitate communication between modules and the composition of multiple modules into coherent applications."},{title:"Protobuf",description:"Protobuf provides one `Msg` service to handle messages and one gRPC `Query` service to handle queries."},{title:"Keeper",description:"A Keeper is a controller that defines the state and presents methods for updating and inspecting the state."}]}}),e._v(" "),o("h3",{attrs:{id:"interfaces"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#interfaces"}},[e._v("#")]),e._v(" Interfaces")]),e._v(" "),o("p",[e._v("A module must implement "),o("strong",[e._v("three application module interfaces")]),e._v(" to be integrated with the rest of the application:")]),e._v(" "),o("ul",[o("li",[o("strong",[o("code",[e._v("AppModuleBasic")]),e._v(":")]),e._v(" implements non-dependent elements of the module.")]),e._v(" "),o("li",[o("strong",[o("code",[e._v("AppModule")]),e._v(":")]),e._v(" interdependent, specialized elements of the module that are unique to the application.")]),e._v(" "),o("li",[o("strong",[o("code",[e._v("AppModuleGenesis")]),e._v(":")]),e._v(" interdependent, genesis/initialization elements of the module that establish the initial state of the blockchain at inception.")])]),e._v(" "),o("p",[e._v("You define "),o("code",[e._v("AppModule")]),e._v(" and "),o("code",[e._v("AppModuleBasic")]),e._v(", and their functions, in your module's "),o("code",[e._v("x/moduleName/module.go")]),e._v(" file.")]),e._v(" "),o("h3",{attrs:{id:"protobuf-services"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#protobuf-services"}},[e._v("#")]),e._v(" Protobuf services")]),e._v(" "),o("p",[e._v("Each module defines two Protobuf services:")]),e._v(" "),o("ul",[o("li",[o("strong",[o("code",[e._v("Msg")]),e._v(":")]),e._v(" a set of RPC methods related one-to-one to Protobuf request types, to handle messages.")]),e._v(" "),o("li",[o("strong",[o("code",[e._v("Query")]),e._v(":")]),e._v(" gRPC query service, to handle queries.")])]),e._v(" "),o("HighlightBox",{attrs:{type:"tip"}},[o("p",[e._v("If this topic is new to you, read an introduction to "),o("a",{attrs:{href:"https://www.ionos.com/digitalguide/websites/web-development/protocol-buffers-explained/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Protocol Buffers"),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("h3",{attrs:{id:"msg-service"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#msg-service"}},[e._v("#")]),e._v(" "),o("code",[e._v("Msg")]),e._v(" service")]),e._v(" "),o("p",[e._v("Regarding the "),o("code",[e._v("Msg")]),e._v(" service, keep in mind:")]),e._v(" "),o("ul",[o("li",[e._v("Best practice is to define the "),o("code",[e._v("Msg")]),e._v(" Protobuf service in the "),o("code",[e._v("tx.proto")]),e._v(" file.")]),e._v(" "),o("li",[e._v("Each module should implement the "),o("code",[e._v("RegisterServices")]),e._v(" method as part of the "),o("code",[e._v("AppModule")]),e._v(" interface. This lets the application know which messages and queries the module can handle.")]),e._v(" "),o("li",[e._v("Service methods should use a "),o("em",[e._v("keeper")]),e._v(", which encapsulates knowledge about the storage layout and presents methods for updating the state.")])]),e._v(" "),o("h3",{attrs:{id:"grpc-query-service"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#grpc-query-service"}},[e._v("#")]),e._v(" gRPC "),o("code",[e._v("Query")]),e._v(" service")]),e._v(" "),o("p",[e._v("For the gRPC "),o("code",[e._v("Query")]),e._v(" service, keep in mind:")]),e._v(" "),o("ul",[o("li",[e._v("Best practice is to define the "),o("code",[e._v("Query")]),e._v(" Protobuf service in the "),o("code",[e._v("query.proto")]),e._v(" file.")]),e._v(" "),o("li",[e._v("It allows users to query the state using gRPC.")]),e._v(" "),o("li",[e._v("Each gRPC endpoint corresponds to a service method, named with the "),o("code",[e._v("rpc")]),e._v(" prefix inside the gRPC "),o("code",[e._v("Query")]),e._v(" service.")]),e._v(" "),o("li",[e._v("It can be configured under the "),o("code",[e._v("grpc.enable")]),e._v(" and "),o("code",[e._v("grpc.address")]),e._v(" fields in "),o("code",[e._v("app.toml")]),e._v(".")])]),e._v(" "),o("p",[e._v("Protobuf generates a "),o("code",[e._v("QueryServer")]),e._v(" interface containing all the service methods for each module. Modules implement this "),o("code",[e._v("QueryServer")]),e._v(" interface by providing the concrete implementation of each service method in separate files. These implementation methods are the handlers of the corresponding gRPC query endpoints. This division of concerns across different files makes the setup safe from a re-generation of files by Protobuf.")]),e._v(" "),o("HighlightBox",{attrs:{type:"info"}},[o("p",[o("a",{attrs:{href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("gRPC"),o("OutboundLink")],1),e._v(" is a modern, open-source, high-performance framework that supports multiple languages. It is the recommended standard for external clients such as wallets, browsers, and backend services to interact with a node.")])]),e._v(" "),o("p",[e._v("gRPC-Gateway REST endpoints support external clients that may not wish to use gRPC. The Cosmos SDK provides a gRPC-gateway REST endpoint for each gRPC service.")]),e._v(" "),o("HighlightBox",{attrs:{type:"docs"}},[o("p",[e._v("See the "),o("a",{attrs:{href:"https://grpc-ecosystem.github.io/grpc-gateway/",target:"_blank",rel:"noopener noreferrer"}},[e._v("gRPC-Gateway documentation"),o("OutboundLink")],1),e._v(" for more on the gRPC-Gateway plugin.")])]),e._v(" "),o("h3",{attrs:{id:"command-line-commands"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#command-line-commands"}},[e._v("#")]),e._v(" Command-line commands")]),e._v(" "),o("p",[e._v("Each module defines commands for a command-line interface (CLI). Commands related to a module are defined in a folder called "),o("code",[e._v("client/cli")]),e._v(". The CLI divides commands into two categories: transactions and queries. These are the same as those which you defined in "),o("code",[e._v("tx.go")]),e._v(" and "),o("code",[e._v("query.go")]),e._v(" respectively.")]),e._v(" "),o("h3",{attrs:{id:"keeper"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#keeper"}},[e._v("#")]),e._v(" Keeper")]),e._v(" "),o("p",[e._v("Keepers are the gatekeepers to any stores in the module. It is mandatory to go through a module’s keeper to access a store. A keeper encapsulates the knowledge about the layout of the storage within the store and contains methods to update and inspect it. If you come from a model-view-controller (MVC) world, then it helps to think of the keeper as the controller.")]),e._v(" "),o("p",[o("tm-image",{attrs:{src:"/academy/2-cosmos-concepts/images/keeper.png"}})],1),e._v(" "),o("p",[e._v("Other modules may need access to a store, but other modules are also potentially malicious or poorly written. For this reason, developers need to consider who and what should have access to their module stores. To prevent a module from randomly accessing another module at runtime, a module needs to declare its intent to use another module at construction. At this point, such a module is granted a runtime key that lets it access the other module. Only modules that hold this key to a store can access the store. This is part of what is called an "),o("strong",[e._v("object-capability model")]),e._v(".")]),e._v(" "),o("p",[e._v("Keepers are defined in "),o("code",[e._v("keeper.go")]),e._v(". A keeper's type definition generally consists of keys to the module's own store in the "),o("code",[e._v("multistore")]),e._v(", references to the keepers of other modules, and a reference to the application's codec.")]),e._v(" "),o("h2",{attrs:{id:"core-modules"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#core-modules"}},[e._v("#")]),e._v(" Core modules")]),e._v(" "),o("p",[e._v("The Cosmos SDK includes a set of core modules that address common concerns with well-solved, standardized implementations. Core modules address application needs such as tokens, staking, and governance.")]),e._v(" "),o("p",[e._v("Core modules offer several advantages over ad-hoc solutions:")]),e._v(" "),o("ul",[o("li",[e._v("Standardization is established early, which helps ensure good interoperability with wallets, analytics, other modules, and other Cosmos SDK applications.")]),e._v(" "),o("li",[e._v("Duplication of effort is significantly reduced because application developers focus on what is unique about their application.")]),e._v(" "),o("li",[e._v("Core modules are working examples of Cosmos SDK modules that provide strong hints about suggested structure, style, and best practices.")])]),e._v(" "),o("p",[e._v("Developers create coherent applications by selecting and composing core modules first and then implementing the custom logic.")]),e._v(" "),o("HighlightBox",{attrs:{type:"tip"}},[o("p",[e._v("Why not explore the "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/tree/main/x",target:"_blank",rel:"noopener noreferrer"}},[e._v("list of core modules and the application concerns they address"),o("OutboundLink")],1),e._v("?")])]),e._v(" "),o("h2",{attrs:{id:"recommended-folder-structure"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#recommended-folder-structure"}},[e._v("#")]),e._v(" Recommended folder structure")]),e._v(" "),o("HighlightBox",{attrs:{type:"info"}},[o("p",[e._v("The following ideas are meant to be applied as suggestions. Application developers are encouraged to improve and contribute to the module structure and development design.")])]),e._v(" "),o("h3",{attrs:{id:"structure"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#structure"}},[e._v("#")]),e._v(" Structure")]),e._v(" "),o("p",[e._v("A typical Cosmos SDK module can be structured as follows:")]),e._v(" "),o("ol",[o("li",[e._v("The serializable data types and Protobuf interfaces:")])]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"shell",base64:"cHJvdG8K4pSU4pSA4pSAIHtwcm9qZWN0X25hbWV9CiAgICDilJTilIDilIAge21vZHVsZV9uYW1lfQogICAgICAgIOKUlOKUgOKUgCB7cHJvdG9fdmVyc2lvbn0KICAgICAgICAgICAg4pSc4pSA4pSAIHttb2R1bGVfbmFtZX0ucHJvdG8KICAgICAgICAgICAg4pSc4pSA4pSAIGV2ZW50LnByb3RvCiAgICAgICAgICAgIOKUnOKUgOKUgCBnZW5lc2lzLnByb3RvCiAgICAgICAgICAgIOKUnOKUgOKUgCBxdWVyeS5wcm90bwogICAgICAgICAgICDilJTilIDilIAgdHgucHJvdG8K"}}),e._v(" "),o("ul",[o("li",[o("code",[e._v("{module_name}.proto")]),e._v(": the module's common message type definitions.")]),e._v(" "),o("li",[o("code",[e._v("event.proto")]),e._v(": the module's message type definitions related to events.")]),e._v(" "),o("li",[o("code",[e._v("genesis.proto")]),e._v(": the module's message type definitions related to the genesis state.")]),e._v(" "),o("li",[o("code",[e._v("query.proto")]),e._v(": the module's "),o("code",[e._v("Query")]),e._v(" service and related message type definitions.")]),e._v(" "),o("li",[o("code",[e._v("tx.proto")]),e._v(": the module's "),o("code",[e._v("Msg")]),e._v(" service and related message type definitions.")])]),e._v(" "),o("ol",{attrs:{start:"2"}},[o("li",[e._v("Then the rest of the code elements:")])]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"shell",base64:"eC97bW9kdWxlX25hbWV9CuKUnOKUgOKUgCBjbGllbnQK4pSCICAg4pSc4pSA4pSAIGNsaQrilIIgICDilIIgICDilJzilIDilIAgcXVlcnkuZ28K4pSCICAg4pSCICAg4pSU4pSA4pSAIHR4LmdvCuKUgiAgIOKUlOKUgOKUgCB0ZXN0dXRpbArilIIgICAgICAg4pSc4pSA4pSAIGNsaV90ZXN0LmdvCuKUgiAgICAgICDilJTilIDilIAgc3VpdGUuZ28K4pSc4pSA4pSAIGV4cG9ydGVkCuKUgiAgIOKUlOKUgOKUgCBleHBvcnRlZC5nbwrilJzilIDilIAga2VlcGVyCuKUgiAgIOKUnOKUgOKUgCBnZW5lc2lzLmdvCuKUgiAgIOKUnOKUgOKUgCBncnBjX3F1ZXJ5LmdvCuKUgiAgIOKUnOKUgOKUgCBob29rcy5nbwrilIIgICDilJzilIDilIAgaW52YXJpYW50cy5nbwrilIIgICDilJzilIDilIAga2VlcGVyLmdvCuKUgiAgIOKUnOKUgOKUgCBrZXlzLmdvCuKUgiAgIOKUnOKUgOKUgCBtc2dfc2VydmVyLmdvCuKUgiAgIOKUlOKUgOKUgCBxdWVyaWVyLmdvCuKUnOKUgOKUgCBtb2R1bGUK4pSCICAg4pSU4pSA4pSAIG1vZHVsZS5nbwrilJzilIDilIAgc2ltdWxhdGlvbgrilIIgICDilJzilIDilIAgZGVjb2Rlci5nbwrilIIgICDilJzilIDilIAgZ2VuZXNpcy5nbwrilIIgICDilJzilIDilIAgb3BlcmF0aW9ucy5nbwrilIIgICDilJTilIDilIAgcGFyYW1zLmdvCuKUnOKUgOKUgCBzcGVjCuKUgiAgIOKUnOKUgOKUgCAwMV9jb25jZXB0cy5tZArilIIgICDilJzilIDilIAgMDJfc3RhdGUubWQK4pSCICAg4pSc4pSA4pSAIDAzX21lc3NhZ2VzLm1kCuKUgiAgIOKUlOKUgOKUgCAwNF9ldmVudHMubWQK4pSc4pSA4pSAIHttb2R1bGVfbmFtZX0ucGIuZ28K4pSc4pSA4pSAIGFiY2kuZ28K4pSc4pSA4pSAIGNvZGVjLmdvCuKUnOKUgOKUgCBlcnJvcnMuZ28K4pSc4pSA4pSAIGV2ZW50cy5nbwrilJzilIDilIAgZXZlbnRzLnBiLmdvCuKUnOKUgOKUgCBleHBlY3RlZF9rZWVwZXJzLmdvCuKUnOKUgOKUgCBnZW5lc2lzLmdvCuKUnOKUgOKUgCBnZW5lc2lzLnBiLmdvCuKUnOKUgOKUgCBrZXlzLmdvCuKUnOKUgOKUgCBtc2dzLmdvCuKUnOKUgOKUgCBwYXJhbXMuZ28K4pSc4pSA4pSAIHF1ZXJ5LnBiLmdvCuKUlOKUgOKUgCB0eC5wYi5nbwo="}}),e._v(" "),o("ul",[o("li",[o("code",[e._v("client/")]),e._v(": the module's CLI client functionality implementation and the module's integration testing suite.")]),e._v(" "),o("li",[o("code",[e._v("exported/")]),e._v(": the module's exported types - typically interface types (see also the following note).")]),e._v(" "),o("li",[o("code",[e._v("keeper/")]),e._v(": the module's "),o("code",[e._v("Keeper")]),e._v(" and "),o("code",[e._v("MsgServer")]),e._v(" implementations.")]),e._v(" "),o("li",[o("code",[e._v("module/")]),e._v(": the module's "),o("code",[e._v("AppModule")]),e._v(" and "),o("code",[e._v("AppModuleBasic")]),e._v(" implementations.")]),e._v(" "),o("li",[o("code",[e._v("simulation/")]),e._v(": the module's simulation package defines functions used by the blockchain simulator application ("),o("code",[e._v("simapp")]),e._v(").")]),e._v(" "),o("li",[o("code",[e._v("spec/")]),e._v(": the module's specification documents outlining important concepts, state storage structure, and message and event type definitions.")]),e._v(" "),o("li",[e._v("The root directory includes type definitions for messages, events, and genesis state, including the type definitions generated by Protocol Buffers:\n"),o("ul",[o("li",[o("code",[e._v("abci.go")]),e._v(": the module's "),o("code",[e._v("BeginBlocker")]),e._v(" and "),o("code",[e._v("EndBlocker")]),e._v(" implementations. This file is only required if "),o("code",[e._v("BeginBlocker")]),e._v(" and/or "),o("code",[e._v("EndBlocker")]),e._v(" need to be defined.")]),e._v(" "),o("li",[o("code",[e._v("codec.go")]),e._v(": the module's registry methods for interface types.")]),e._v(" "),o("li",[o("code",[e._v("errors.go")]),e._v(": the module's sentinel errors.")]),e._v(" "),o("li",[o("code",[e._v("events.go")]),e._v(": the module's event types and constructors.")]),e._v(" "),o("li",[o("code",[e._v("expected_keepers.go")]),e._v(": the module's expected other keeper interfaces.")]),e._v(" "),o("li",[o("code",[e._v("genesis.go")]),e._v(": the module's genesis state methods and helper functions.")]),e._v(" "),o("li",[o("code",[e._v("keys.go")]),e._v(": the module's store keys and associated helper functions.")]),e._v(" "),o("li",[o("code",[e._v("msgs.go")]),e._v(": the module's message type definitions and associated methods.")]),e._v(" "),o("li",[o("code",[e._v("params.go")]),e._v(": the module's parameter type definitions and associated methods.")]),e._v(" "),o("li",[o("code",[e._v("*.pb.go")]),e._v(": the module's type definitions generated by Protocol Buffers as defined in the respective "),o("code",[e._v("*.proto")]),e._v(" files.")])])])]),e._v(" "),o("HighlightBox",{attrs:{type:"info"}},[o("p",[e._v("If a module relies on keepers from another module, the "),o("code",[e._v("exported/")]),e._v(" code element expects to receive the keepers as interface contracts to avoid a direct dependency on the module implementing the keepers. However, these interface contracts can define methods that operate on (or return types that are specific to) the module that is implementing the keepers.\n"),o("br"),o("br"),e._v("\nThe interface types defined in "),o("code",[e._v("exported/")]),e._v(" use canonical types that allow for the module to receive the interface contracts through the "),o("code",[e._v("expected_keepers.go")]),e._v(" file. This pattern allows for code to remain "),o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",target:"_blank",rel:"noopener noreferrer"}},[e._v("DRY"),o("OutboundLink")],1),e._v(" and also alleviates import cycle chaos.")])]),e._v(" "),o("h2",{attrs:{id:"errors"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#errors"}},[e._v("#")]),e._v(" Errors")]),e._v(" "),o("p",[e._v("Modules are encouraged to define and register their own errors to provide better context for failed messages or handler executions. Errors should be common or general errors, which can be further wrapped to provide additional specific execution context.")]),e._v(" "),o("HighlightBox",{attrs:{type:"docs"}},[o("p",[e._v("For more details see the "),o("a",{attrs:{href:"https://docs.cosmos.network/main/building-modules/errors.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cosmos SDK documentation on errors when building modules"),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("h3",{attrs:{id:"registration"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#registration"}},[e._v("#")]),e._v(" Registration")]),e._v(" "),o("p",[e._v("Modules should define and register their custom errors in "),o("code",[e._v("x/{module}/errors.go")]),e._v(". Registration of errors is handled via the "),o("code",[e._v("types/errors")]),e._v(" package.")]),e._v(" "),o("p",[e._v('Each custom module error must provide the codespace, which is typically the module name (for example, "distribution") and is unique per module, and a '),o("code",[e._v("uint32")]),e._v(" code. The codespace and code together provide a globally unique Cosmos SDK error.")]),e._v(" "),o("p",[e._v("The only restrictions on error codes are the following:")]),e._v(" "),o("ul",[o("li",[e._v("They must be greater than one, as a code value of one is reserved for internal errors.")]),e._v(" "),o("li",[e._v("They must be unique within the module.")])]),e._v(" "),o("HighlightBox",{attrs:{type:"info"}},[o("p",[e._v("The Cosmos SDK provides a core set of common errors. These errors are defined in "),o("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/master/types/errors/errors.go",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("types/errors/errors.go")]),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("h3",{attrs:{id:"wrapping"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#wrapping"}},[e._v("#")]),e._v(" Wrapping")]),e._v(" "),o("p",[e._v("The custom module errors can be returned as their concrete type, as they already fulfill the error interface. Module errors can be wrapped to provide further context and meaning to failed executions.")]),e._v(" "),o("p",[e._v("Regardless of whether an error is wrapped or not, the Cosmos SDK's errors package provides an API to determine if an error is of a particular kind via "),o("code",[e._v("Is")]),e._v(".")]),e._v(" "),o("h3",{attrs:{id:"abci"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#abci"}},[e._v("#")]),e._v(" ABCI")]),e._v(" "),o("p",[e._v("If a module error is registered, the Cosmos SDK errors package allows ABCI information to be extracted through the "),o("code",[e._v("ABCIInfo")]),e._v(" API. The package also provides "),o("code",[e._v("ResponseCheckTx")]),e._v(" and "),o("code",[e._v("ResponseDeliverTx")]),e._v(" as auxiliary APIs to automatically get "),o("code",[e._v("CheckTx")]),e._v(" and "),o("code",[e._v("DeliverTx")]),e._v(" responses from an error.")]),e._v(" "),o("h2",{attrs:{id:"code-example"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#code-example"}},[e._v("#")]),e._v(" Code example")]),e._v(" "),o("ExpansionPanel",{attrs:{title:"Show me some code for my checkers blockchain"}},[o("p",[e._v("Now your application is starting to take shape.\n"),o("br"),o("br"),e._v(" "),o("strong",[e._v("The "),o("code",[e._v("checkers")]),e._v(" module")])]),e._v(" "),o("p",[e._v("When you create your checkers blockchain application, you ought to include a majority of the standard modules like "),o("code",[e._v("auth")]),e._v(", "),o("code",[e._v("bank")]),e._v(", and so on. With the Cosmos SDK boilerplate in place, the "),o("em",[e._v("checkers part")]),e._v(" of your checkers application will most likely reside in a single "),o("code",[e._v("checkers")]),e._v(" module. This is the module that you author.\n"),o("br"),o("br"),e._v(" "),o("strong",[e._v("Game wager")])]),e._v(" "),o("p",[e._v("Earlier the goal was to let players play with "),o("em",[e._v("money")]),e._v(". With the introduction of modules like "),o("code",[e._v("bank")]),e._v(" you can start handling that.\n"),o("br"),o("br"),e._v("\nThe initial ideas are:")]),e._v(" "),o("ul",[o("li",[e._v("The wager amount is declared when creating a game.")]),e._v(" "),o("li",[e._v('Each player is billed the amount when making their first move, which is interpreted as "challenge accepted". The amount should not be deducted on the game creation. If the game times out, the first player gets refunded.')]),e._v(" "),o("li",[e._v("Subsequent moves by a player do not cost anything.")]),e._v(" "),o("li",[e._v("If a game ends in a win or times out on a forfeit, the winning player gets the total wager amount.")]),e._v(" "),o("li",[e._v("If a game ends in a draw, then both players get back their amount.")])]),e._v(" "),o("p",[e._v("How would this look in terms of code? You need to add the wager to:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("The game:")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBTdG9yZWRHYW1lIHN0cnVjdCB7CiAgICAuLi4KICAgIFdhZ2VyIHVpbnQ2NAp9Cg=="}})],1),e._v(" "),o("li",[o("p",[e._v("The message to create a game:")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBNc2dDcmVhdGVHYW1lIHN0cnVjdCB7CiAgICAuLi4KICAgIFdhZ2VyIHVpbnQ2NAp9Cg=="}})],1)]),e._v(" "),o("p",[o("strong",[e._v("Wager payment")])]),e._v(" "),o("p",[e._v("Now you must decide how the tokens are moved. When a player accepts a challenge, the amount is deducted from that player's balance. But where does it go? You could burn the tokens and re-mint them at a later date, but this would make the total supply fluctuate wildly for no apparent benefit.\n"),o("br"),o("br"),e._v("\nIt is possible to transfer from a player to a module. The module acts as the escrow account for all games. So when playing for the first time, a player would:")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"aW1wb3J0ICgKICAgIHNkayAmcXVvdDtnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzJnF1b3Q7CiAgICBiYW5rS2VlcGVyICZxdW90O2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9iYW5rL2tlZXBlciZxdW90OwopCgp3YWdlciA6PSBzZGsuTmV3Q29pbigmcXVvdDtzdGFrZSZxdW90Oywgc2RrLk5ld0ludChzdG9yZWRHYW1lLldhZ2VyKSkKcGF5bWVudCA6PSBzZGsuTmV3Q29pbnMod2FnZXIpCnZhciBiYW5rIGJhbmtLZWVwZXIuS2VlcGVyCnZhciBjdHggc2RrLkNvbnRleHQKdmFyIHBsYXllckFkZHJlc3Mgc2RrLkFjY0FkZHJlc3MKZXJyIDo9IGJhbmsuU2VuZENvaW5zRnJvbUFjY291bnRUb01vZHVsZShjdHgsIHBsYXllckFkZHJlc3MsICZxdW90O2NoZWNrZXJzJnF1b3Q7LCBwYXltZW50KQppZiBlcnIgIT0gbmlsIHsKICAgIHJldHVybiBlcnJvcnMuTmV3KCZxdW90O3BsYXllciBjYW5ub3QgcGF5IHRoZSB3YWdlciZxdW90OykKfQo="}}),e._v(" "),o("p",[o("code",[e._v('"stake"')]),e._v(" identifies the likely name of the base token of your application, the token that is used with the consensus. Of course, you can choose to have the wager paid in any denomination, even one decided by players when creating the game. Conversely, when paying a winner you would have:")]),e._v(" "),o("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YW1vdW50IDo9IHNkay5OZXdJbnQoc3RvcmVkR2FtZS5XYWdlcikuTXVsKHNkay5OZXdJbnQoMikpCndpbm5pbmdzIDo9IHNkay5OZXdDb2luKCZxdW90O3N0YWtlJnF1b3Q7LCBhbW91bnQpCnBheW1lbnQgOj0gc2RrLk5ld0NvaW5zKHdpbm5pbmdzKQp2YXIgd2lubmVyQWRkcmVzcyBzZGsuQWNjQWRkcmVzcwplcnIgOj0gYmFuay5TZW5kQ29pbnNGcm9tTW9kdWxlVG9BY2NvdW50KGN0eCwgJnF1b3Q7Y2hlY2tlcnMmcXVvdDssIHdpbm5lckFkZHJlc3MsIHBheW1lbnQpCmlmIGVyciAhPSBuaWwgewogICAgcGFuaWMoJnF1b3Q7Q2Fubm90IHBheSB0aGUgd2lubmluZ3MgdG8gd2lubmVyJnF1b3Q7KQp9Cg=="}}),e._v(" "),o("HighlightBox",{attrs:{type:"info"}},[o("p",[e._v("Note that:")]),e._v(" "),o("ul",[o("li",[e._v("It is a "),o("em",[e._v("standard")]),e._v(" error when the player cannot pay, which is "),o("em",[e._v("easily")]),e._v(" fixed by the player.")]),e._v(" "),o("li",[e._v("It is a panic (an internal error) when the escrow account cannot pay, because if the escrow cannot pay it means there is a logic problem somewhere.")])])])],1),e._v(" "),o("HighlightBox",{attrs:{type:"tip"}},[o("p",[e._v("If you want to go beyond the code samples in the expandable above and instead see in more detail how to define all this, go to "),o("RouterLink",{attrs:{to:"/hands-on-exercise/1-ignite-cli/"}},[e._v("Run Your Own Cosmos Chain")]),e._v(".")],1),e._v(" "),o("p",[e._v("More specifically, you can jump to:")]),e._v(" "),o("ul",[o("li",[o("RouterLink",{attrs:{to:"/hands-on-exercise/1-ignite-cli/1-ignitecli.html"}},[e._v("Ignite CLI")]),e._v(" to create a new blockchain with your checkers module.")],1),e._v(" "),o("li",[e._v("The advanced "),o("RouterLink",{attrs:{to:"/hands-on-exercise/2-ignite-cli-adv/6-payment-winning.html"}},[e._v("Handle Wager Payments")]),e._v(" to have your checkers module access and use the bank module.")],1),e._v(" "),o("li",[o("RouterLink",{attrs:{to:"/hands-on-exercise/4-run-in-prod/3-add-leaderboard.html"}},[e._v("Add a leaderboard module")]),e._v(" and loosely couple it with another module with the use of the hooks pattern. It also leverages the module's "),o("code",[e._v("Params")]),e._v(" construct.")],1),e._v(" "),o("li",[e._v("The IBC-advanced "),o("RouterLink",{attrs:{to:"/hands-on-exercise/5-ibc-adv/6-ibc-app-checkers.html"}},[e._v("Extend the Checkers Game With a Leaderboard")]),e._v(" to add a second custom IBC module to your checkers blockchain.")],1),e._v(" "),o("li",[e._v("The IBC-advanced "),o("RouterLink",{attrs:{to:"/hands-on-exercise/5-ibc-adv/7-ibc-app-leaderboard.html"}},[e._v("Create a Leaderboard Chain")]),e._v(" to create a new blockchain with a module, once again.")],1)])]),e._v(" "),o("HighlightBox",{attrs:{type:"synopsis"}},[o("p",[e._v("To summarize, this section has explored:")]),e._v(" "),o("ul",[o("li",[e._v("How Cosmos SDK modules can be viewed as purpose-specific state machines that define the unique properties of the larger state machine that is each blockchain.")]),e._v(" "),o("li",[e._v("How messages are decomposed from the incoming transaction containing them and routed to the appropriate module for processing.")]),e._v(" "),o("li",[e._v("How all modules comprise three core functionalities: an implementation of ABCI to communicate with CometBFT; a general-purpose data store which persists the module state; and the server and interfaces which facilitate interactions with the node.")]),e._v(" "),o("li",[e._v("How the majority of work for developers is in building custom modules that satisfy their unique needs, which are then integrated into a coherent application alongside existing modules from the Cosmos SDK of third-party developers.")]),e._v(" "),o("li",[e._v("How the Cosmos SDK's set of core modules address common applications needs (such as tokens, staking, and governance) while providing useful benefits like standardization across the Ecosystem, less duplication of effort, and practical examples of effective structure, style, and best practices.")]),e._v(" "),o("li",[e._v("How modules should ideally define and register their own set of errors (in addition to the Cosmos SDK's set of common errors), allowing developers to add context and meaning to failed executions.")])])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);